=begin
#NIUM Platform

#NIUM Platform

The version of the OpenAPI document: 2023.12.12
Contact: experience@nium.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for NiumClient::RemittanceTransactionsRequestDTO
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe NiumClient::RemittanceTransactionsRequestDTO do
  let(:instance) { NiumClient::RemittanceTransactionsRequestDTO.new }

  describe 'test an instance of RemittanceTransactionsRequestDTO' do
    it 'should create an instance of RemittanceTransactionsRequestDTO' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(NiumClient::RemittanceTransactionsRequestDTO)
    end
  end

  describe 'test attribute "additional_fees"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "authentication_code"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "beneficiary"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "customer_comments"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "device_details"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "exemption_code"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["01", "03", "04"])
      # validator.allowable_values.each do |value|
      #   expect { instance.exemption_code = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "own_payment"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "payout"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "purpose_code"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "remitter"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "source_of_funds"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Salary", "Personal Savings", "Personal Wealth", "Retirement Funds", "Business Owner/Shareholder", "Loan Facility", "Personal Account", "Corporate Account"])
      # validator.allowable_values.each do |value|
      #   expect { instance.source_of_funds = value }.not_to raise_error
      # end
    end
  end

end
