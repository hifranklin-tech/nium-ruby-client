=begin
#NIUM Platform

#NIUM Platform

The version of the OpenAPI document: 2023.12.12
Contact: experience@nium.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for NiumClient::AddCardRequestVIRUP2PHY
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe NiumClient::AddCardRequestVIRUP2PHY do
  let(:instance) { NiumClient::AddCardRequestVIRUP2PHY.new }

  describe 'test an instance of AddCardRequestVIRUP2PHY' do
    it 'should create an instance of AddCardRequestVIRUP2PHY' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(NiumClient::AddCardRequestVIRUP2PHY)
    end
  end

  describe 'test attribute "card_expiry"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "card_product_id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "card_type"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["PHY", "VIR", "VIRUP2PHY"])
      # validator.allowable_values.each do |value|
      #   expect { instance.card_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "name_on_card"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "additional_line"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "email"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "child_customer_hash_id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "country_code"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "mobile"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "issuance_mode"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["NORMAL_DELIVERY_LOCAL", "BULK_ISSUE_LOCAL", "BULK_ISSUE_INTERNATIONAL_AU", "BULK_ISSUE_INTERNATIONAL_EU", "EXPRESS_DELIVERY_LOCAL", "INTERNATIONAL_DELIVERY"])
      # validator.allowable_values.each do |value|
      #   expect { instance.issuance_mode = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "plastic_id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "delivery"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
