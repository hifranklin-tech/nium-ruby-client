=begin
#NIUM Platform

#NIUM Platform

The version of the OpenAPI document: 2023.12.12
Contact: experience@nium.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for NiumClient::ApplicantDetails2
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe NiumClient::ApplicantDetails2 do
  let(:instance) { NiumClient::ApplicantDetails2.new }

  describe 'test an instance of ApplicantDetails2' do
    it 'should create an instance of ApplicantDetails2' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(NiumClient::ApplicantDetails2)
    end
  end

  describe 'test attribute "additional_info"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "address"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "birth_country"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "contact_details"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "date_of_birth"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "document_details"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "first_name"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "gender"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "is_resident"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "kyc_mode"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "last_name"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "middle_name"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "nationality"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "occupation"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["OC0001", "OC1001", "OC1002", "OC1003", "OC1110", "OC1120", "OC1201", "OC1210", "OC1211", "OC1220", "OC1310", "OC1311", "OC1320", "OC1410", "OC1411", "OC1420", "OC1430", "OC1440", "OC2001", "OC2110", "OC2111", "OC2112", "OC2120", "OC2121", "OC2122", "OC2123", "OC2130", "OC2131", "OC2132", "OC2133", "OC2139", "OC2210", "OC2211", "OC2221", "OC2222", "OC2223", "OC2230", "OC2231", "OC3001", "OC3110", "OC3111", "OC3112", "OC3120", "OC3130", "OC3210", "OC3211", "OC3212", "OC3220", "OC3310", "OC4001", "OC4002", "OC4003", "OC4004", "OC4110", "OC4120", "OC4121", "OC4122", "OC4130", "OC4131", "OC4132", "OC4140", "OC4210", "OC4220", "OC4310", "OC4320", "OC4410", "OC4420", "OC4510", "OC5001", "OC5110", "OC5111", "OC5112", "OC5210", "OC5211", "OC5212", "OC5310", "OC5311", "OC5312", "OC5320", "OC5410", "OC5510", "OC6001", "OC6002", "OC6003", "OC6004", "OC6201", "OC6202", "OC6210", "OC6220", "OC6310", "OC6320", "OC6321", "OC6322", "OC6410", "OC6420", "OC6430", "OC6431", "OC6432", "OC6440", "OC6441", "OC6510", "OC6520", "OC6521", "OC6522", "OC6531", "OC6532", "OC7001", "OC7002", "OC7201", "OC7202", "OC7210", "OC7220", "OC7230", "OC7231", "OC7232", "OC7240", "OC7241", "OC7242", "OC7250", "OC7260", "OC7299", "OC7310", "OC7311", "OC7320", "OC7330", "OC7331", "OC7340", "OC7410", "OC7420", "OC7510", "OC7511", "OC7520", "OC7521", "OC8001", "OC8002", "OC8201", "OC8202", "OC8203", "OC8310", "OC8311", "OC8312", "OC8410", "OC8411", "OC8412", "OC8510", "OC8511", "OC8512", "OC9001", "OC9201", "OC9202", "OC9210", "OC9310", "OC9320", "OC9410", "OC9411", "OC9412", "OC9413", "OC9414", "OC9415", "OC9420", "OC9421", "OC9510"])
      # validator.allowable_values.each do |value|
      #   expect { instance.occupation = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "professional_details"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "reference_id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "tax_details"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
