=begin
#NIUM Platform

#NIUM Platform

The version of the OpenAPI document: 2023.12.12
Contact: experience@nium.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for NiumClient::CustomerManagementApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CustomerManagementApi' do
  before do
    # run before each test
    @api_instance = NiumClient::CustomerManagementApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomerManagementApi' do
    it 'should create an instance of CustomerManagementApi' do
      expect(@api_instance).to be_instance_of(NiumClient::CustomerManagementApi)
    end
  end

  # unit tests for account_statement
  # Account Statement
  # This API allows you to download an account statement.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated on customer creation.
  # @param end_date End date for fetching the transaction details. The format for endDate is YYYY-MM-DD.
  # @param start_date From date for fetching the transaction details. The format for startDate is YYYY-MM-DD.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :currencies This field accepts the list of currencies in 3-letter [ISO-4217 transaction currency code](https://docs.nium.com/apis/docs/currency-and-country-codes) for which the account statement to be generated. If no currencies are being sent in query param then statement will be generated for all the currencies enabled to the customer.
  # @option opts [String] :file_type This field accepts the file type of the account statement to be generated.
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [nil]
  describe 'account_statement test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for block_unblock_customer
  # Block/Unblock Customer
  # This API allows you to permanently block or temporarily block/unblock a customer.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated on customer creation.
  # @param block_customer_request_dto blockCustomerRequestDTO
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [CustomerApiError]
  describe 'block_unblock_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for customer_details
  # Customer Details
  # This API allows you to fetch details for a specific customer.   &gt;⚠️ WARNING   To access updated functionality and features we recommed using the latest version of this API [Customer Details V2](/apis/reference/customerdetailsv2). In December 2023, this API version will be deprecated and becomes unsupported.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated on customer creation.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [CustomerDetailResponse]
  describe 'customer_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for customer_details_v2
  # Customer Details V2
  # This API allows you to fetch details for a specific customer.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated on customer creation.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [CustomerDetailsResponseV2DTO]
  describe 'customer_details_v2 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for customer_list
  # Customer List
  # This API allows you to fetch the customers for the client. It also supports query parameters based filtering to fetch details of a customer with email or mobile.   &gt;⚠️ WARNING   To access updated functionality and features we recommed using the latest version of this API [Customer List V2](/apis/reference/customerlistv2). In December 2023, this API version will be deprecated and becomes unsupported.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :email This field accepts the email ID of the customer.
  # @option opts [String] :mobile This field accepts the mobile number of a customer--digits only--without the country code.
  # @option opts [String] :order This field accepts the order which can be ASC or DESC.
  # @option opts [String] :page This field accepts the page number to be returned. The acceptable values are 0-N.  This field works with size field such that total number of records/size of each page &#x3D; number of pages(N).  This field can then give a particular page.
  # @option opts [String] :size This field accepts the number of elements per page.
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [Array<CustomerDetailResponse>]
  describe 'customer_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for customer_list_v2
  # Customer List V2
  # This API allows you to fetch customer lists under a client with optional search parameters.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :business_registration_number This field accepts the business registration number of corporate customer.
  # @option opts [String] :email This field accepts the email ID of the customer.
  # @option opts [String] :mobile This field accepts the mobile number of a customer without the country code.
  # @option opts [String] :order This field accepts the order which can be ASC or DESC.
  # @option opts [String] :page This field accepts the page number to be returned. The acceptable values are 0-N.  This field works with size field such that total number of records/size of each page &#x3D; number of pages(N).  This field can then give a particular page.
  # @option opts [String] :size This field accepts the number of elements per page.
  # @option opts [String] :tag_key This parameter can filter the customers, based on the exact value of tagKey defined against customers. This can be used as an independent search parameter.
  # @option opts [String] :tag_value This parameter can filter the customers, based on the approximating value of tagValue(that may be mapped for a tagKey defined against customers). This can be used as an independent search parameter.
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [PaginatedCustomerDetailsResponseV2DTO]
  describe 'customer_list_v2 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for customer_list_v3
  # Customer List V3
  # This API allows you to fetch customer lists under a client with optional search parameters.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :business_registration_number This field accepts the business registration number of corporate customer.
  # @option opts [String] :customer_type This field accepts the type of customer.
  # @option opts [String] :email This field accepts the email ID of the customer.
  # @option opts [String] :mobile This field accepts the mobile number of a customer without the country code.
  # @option opts [String] :order This field accepts the order which can be ASC or DESC.
  # @option opts [String] :page This field accepts the page number to be returned. The acceptable values are 0-N.  This field works with size field such that total number of records/size of each page &#x3D; number of pages(N).  This field can then give a particular page.
  # @option opts [String] :parent_customer_hash_id This field contains the unique parent customer identifier generated at the time of customer creation.
  # @option opts [String] :size This field accepts the number of elements per page.
  # @option opts [String] :tag_key This parameter can filter the customers, based on the exact value of tagKey defined against customers. This can be used as an independent search parameter.
  # @option opts [String] :tag_value This parameter can filter the customers, based on the approximating value of tagValue(that may be mapped for a tagKey defined against customers). This can be used as an independent search parameter.
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [PaginatedResponseDTOCustomerDetailsResponseV2DTO]
  describe 'customer_list_v3 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for manage_customer_tags
  # Manage Customer Tags
  # This API allows you to add, update, and delete customer tags.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated during customer creation.
  # @param customer_client_tags_request_dto tags
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [CustomerClientTagsResponseDTO]
  describe 'manage_customer_tags test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
