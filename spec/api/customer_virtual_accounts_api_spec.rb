=begin
#NIUM Platform

#NIUM Platform

The version of the OpenAPI document: 2023.12.12
Contact: experience@nium.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for NiumClient::CustomerVirtualAccountsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CustomerVirtualAccountsApi' do
  before do
    # run before each test
    @api_instance = NiumClient::CustomerVirtualAccountsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomerVirtualAccountsApi' do
    it 'should create an instance of CustomerVirtualAccountsApi' do
      expect(@api_instance).to be_instance_of(NiumClient::CustomerVirtualAccountsApi)
    end
  end

  # unit tests for account_ownership_certificate
  # Account Ownership Certificate
  # This API allows you to download an account ownership certificate.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated on customer creation.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :currencies This field accepts the list of currencies in 3-letter [ISO-4217 transaction currency code](https://docs.nium.com/apis/docs/currency-and-country-codes) for which the account ownership certificate to be generated. If no currencies are being sent in query param then account ownership certificate will be generated for all the currencies enabled to the customer.
  # @option opts [Boolean] :current_account_balance This field will display the account balance of the customer as on date
  # @option opts [String] :x_request_id Enter a unique UUID value.
  # @return [nil]
  describe 'account_ownership_certificate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for assign_payment_id
  # Assign Payment ID
  # This API allows you to assign virtual account numbers to customer for specific source.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated on customer creation.
  # @param wallet_hash_id Unique wallet identifier generated simultaneously with customer creation.
  # @param payment_id_request_dto2 paymentIdRequestDTO2
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [PaymentIdResponseDTO2]
  describe 'assign_payment_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for manage_virtual_account_tags
  # Manage Virtual Account Tags
  # This API allows you to add, update, delete client tags against each virtual account.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated on customer creation.
  # @param wallet_hash_id Unique wallet identifier generated simultaneously with customer creation.
  # @param payment_id_tag_request_dto tags
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [PaymentIdCientTagsResponseDTO]
  describe 'manage_virtual_account_tags test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for virtual_account_details
  # Virtual Account Details
  # This API allows you to fetch virtual accounts assigned to a customer&#39;s wallet.   ⚠️ WARNING   &gt; To access updated functionality and features we recommed using the latest version of this API [Virtual Account Details V2](/apis/reference/virtualaccountdetailsv2). Eventually, this API version will be deprecated and becomes unsupported.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated and shared before API handshake.
  # @param wallet_hash_id Unique wallet identifier generated and shared before API handshake.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :currency_code 
  # @option opts [String] :end_date 
  # @option opts [String] :order 
  # @option opts [Integer] :page 
  # @option opts [String] :property 
  # @option opts [Integer] :size 
  # @option opts [String] :start_date 
  # @option opts [String] :tag_key 
  # @option opts [String] :tag_value 
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [Array<WalletPaymentIdsResponseDTO>]
  describe 'virtual_account_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for virtual_account_details_v2
  # Virtual Account Details V2
  # This API allows you to fetch virtual accounts assigned to a customer&#39;s wallet.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated and shared before API handshake.
  # @param wallet_hash_id Unique wallet identifier generated and shared before API handshake.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :currency_code 
  # @option opts [String] :end_date 
  # @option opts [String] :order 
  # @option opts [Integer] :page 
  # @option opts [String] :property 
  # @option opts [Integer] :size 
  # @option opts [String] :start_date 
  # @option opts [String] :tag_key 
  # @option opts [String] :tag_value 
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [VirtualAccountResponseDTO]
  describe 'virtual_account_details_v2 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
