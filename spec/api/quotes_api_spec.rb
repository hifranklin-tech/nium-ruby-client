=begin
#NIUM Platform

#NIUM Platform

The version of the OpenAPI document: 2023.12.12
Contact: experience@nium.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for NiumClient::QuotesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'QuotesApi' do
  before do
    # run before each test
    @api_instance = NiumClient::QuotesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of QuotesApi' do
    it 'should create an instance of QuotesApi' do
      expect(@api_instance).to be_instance_of(NiumClient::QuotesApi)
    end
  end

  # unit tests for create_quote
  # Create Quote
  # This API creates an FX quote for a currency pair according to the desired lock period and conversion schedule. The FX rate provided by this API includes the Nium markup and can be utilized for any FX conversion within the quote&#39;s validity period.
  # @param client_hash_id Unique identifier of the client.
  # @param quote_creation_request quoteCreationRequest
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [QuoteCreationResponse]
  describe 'create_quote test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for fetch_quote
  # Fetch Quote by ID
  # This API allows to fetch a quote. A quote is used to identify the exchange rate, and associated markup and fees.
  # @param client_hash_id Unique identifier of the client.
  # @param quote_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [QuoteCreationResponse]
  describe 'fetch_quote test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
