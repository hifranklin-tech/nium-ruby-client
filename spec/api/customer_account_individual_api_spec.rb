=begin
#NIUM Platform

#NIUM Platform

The version of the OpenAPI document: 2023.12.12
Contact: experience@nium.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for NiumClient::CustomerAccountIndividualApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CustomerAccountIndividualApi' do
  before do
    # run before each test
    @api_instance = NiumClient::CustomerAccountIndividualApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomerAccountIndividualApi' do
    it 'should create an instance of CustomerAccountIndividualApi' do
      expect(@api_instance).to be_instance_of(NiumClient::CustomerAccountIndividualApi)
    end
  end

  # unit tests for add_customer
  # Add Customer
  # This API allows you to register a customer with a wallet in NIUM&#39;s cards platform.  &gt;⚠️ WARNING   &gt;This API version is deprecated. Eventually, a deprecated API version becomes unsupported. [Unified Add Customer](ref:unifiedaddcustomer) is the latest version of this API.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_data_request_dto customerDataRequestDTO
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [CustomerDetailResponseDTO]
  describe 'add_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for add_customer_using_my_info_sg
  # Add Customer Using MyInfo [SG]
  # This API will create customers using minimal data, the rest of the partial data will be pulled via MyInfo etc. which is locked and cannot be edited and further rest fields can be updated using Customer Update API.  &gt;⚠️ WARNING   &gt;This API version is deprecated. Eventually, a deprecated API version becomes unsupported. [Unified Add Customer](ref:unifiedaddcustomer) is the latest version of this API.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_data_external_request_dto customerDataExternalRequestDTO
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [CustomerDataExternalResponseDTO]
  describe 'add_customer_using_my_info_sg test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for add_customer_usinge_document_verification
  # Add Customer Using e-Document Verification
  #   &gt;⚠️ WARNING   &gt;This API version is deprecated. Eventually, a deprecated API version becomes unsupported. [Unified Add Customer](ref:unifiedaddcustomer) is the latest version of this API.
  # @param client_hash_id clientHashId
  # @param e_verify_customer_registration_request_dto requestDTO
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [AddCustomerResponseDTO]
  describe 'add_customer_usinge_document_verification test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for customer_update
  # Customer Update
  # This API allows you to update the customer details subject to the following constraints: 1. If compliance status equals to COMPLETED. You can only update email, mobile, delivery address details, and correspondence address details. You may NOT update the billing address. 2. In other cases, you may update any of the fields. At least one key-value pair is needed in the request body of this API.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated on customer creation.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @option opts [UpdateCustomerDTO] :update_customer_dto Customer update request
  # @return [UpdateCustomerResponseDTO]
  describe 'customer_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for fetch_individual_customer_rfi_details
  # Fetch Individual Customer RFI Details
  # This API allows you to fetch details of RFI raised as part of Individual customer onboarding.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated on customer creation.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [Array<CustomerRfiDetailsResponse>]
  describe 'fetch_individual_customer_rfi_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for respondto_rfi
  # Respond to RFI
  # This API allows you to respond to an RFI raised by NIUM compliance team. You may use this API to respond to an RFI for data or documents when the customer&#39;s compliance status is RFI_REQUESTED.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated on customer creation.
  # @param upload_rfi_document_request_dto RFI response object
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [UploadRfiDetailsResponseDto]
  describe 'respondto_rfi test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for unified_add_customer
  # Unified Add Customer
  # This API onboards customers based on their client configuration and preference.   &gt;ℹ️ INFO   The &#39;childMustHaveParent&#39; setting can be optionally set to &#39;true&#39; for Payroll and Spend and Management clients, and it should be set to &#39;false&#39; for all other clients.   For details, see [Parent-child hierarchy](doc:parent-child-hierarchy).
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param request_dto Add individual customer
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [AddCustomerResponseDTO]
  describe 'unified_add_customer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for upload_document
  # Upload Document
  # This API allows to upload documents necessary for customer onboarding. Refer to the RFI details on required documents.
  # @param client_hash_id Unique client identifier generated and shared before API handshake.
  # @param customer_hash_id Unique customer identifier generated on customer creation.
  # @param compliance_document_dto Compliance documents
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_request_id Enter a unique UUID value
  # @return [ComplianceDocumentResponseDTO]
  describe 'upload_document test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
